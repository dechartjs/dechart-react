{"version":3,"sources":["DechartComponent.tsx"],"names":["DechartComponent","props","undefined","data","drawNewChart","prevProps","chartType","componentId","handleMouseMove","handleMouseOut","chartOptions","dechartInstance","Chart","options","on","syntheticData","children","className","borderRadius","position","width","HTML_ROOT","React","PureComponent"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,gB;;;;;AAGJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;;AADiB,8FAFDC,SAEC;;AAAA;AAElB;;;;wCAEmB;AAAA,UACVC,IADU,GACD,KAAKF,KADJ,CACVE,IADU;;AAElB,UAAIA,IAAI,IAAIA,IAAI,CAAC,QAAD,CAAhB,EAA4B;AAC1B,aAAKC,YAAL;AACD;AACF;;;uCAEkBC,S,EAAW;AAAA,UACpBF,IADoB,GACX,KAAKF,KADM,CACpBE,IADoB;;AAE5B,UAAIE,SAAS,CAACF,IAAV,KAAmBA,IAAnB,IAA2BA,IAA/B,EAAqC;AACnC,aAAKC,YAAL;AACD;AACF;;;mCAEc;AAAA,wBAQT,KAAKH,KARI;AAAA,UAEXK,SAFW,eAEXA,SAFW;AAAA,UAGXC,WAHW,eAGXA,WAHW;AAAA,UAIXJ,IAJW,eAIXA,IAJW;AAAA,UAKXK,eALW,eAKXA,eALW;AAAA,UAMXC,cANW,eAMXA,cANW;AAAA,UAOXC,YAPW,eAOXA,YAPW;AAUb,WAAKC,eAAL,GAAuB,IAAIC,gBAAJ,CAAU;AAC/BN,QAAAA,SAAS,EAAEA,SADoB;AAE/BC,QAAAA,WAAW,EAAEA,WAFkB;AAG/BJ,QAAAA,IAAI,EAAEA,IAAI,CAAC,WAAD,CAAJ,GAAoBA,IAAI,CAAC,WAAD,CAAJ,EAApB,qBAA+CA,IAA/C,CAHyB;AAI/BU,QAAAA,OAAO,EAAEH;AAJsB,OAAV,EAMpBI,EANoB,CAMjB,WANiB,EAMJ,UAACC,aAAD,EAAmB;AAClCP,QAAAA,eAAe,IAAIA,eAAe,CAACO,aAAD,CAAlC;AACD,OARoB,EASpBD,EAToB,CASjB,UATiB,EASL,YAAM;AACpBL,QAAAA,cAAc,IAAIA,cAAc,EAAhC;AACD,OAXoB,CAAvB;AAYD;;;6BAEQ;AAAA,yBAMH,KAAKR,KANF;AAAA,UAELS,YAFK,gBAELA,YAFK;AAAA,UAGLM,QAHK,gBAGLA,QAHK;AAAA,UAILC,SAJK,gBAILA,SAJK;AAAA,UAKLV,WALK,gBAKLA,WALK;AAQP,aACE;AACE,QAAA,EAAE,EAAEA,WADN;AAEE,QAAA,SAAS,EAAEU,SAFb;AAGE,QAAA,KAAK;AACHC,UAAAA,YAAY,EAAE,KADX;AAEHC,UAAAA,QAAQ,EAAE;AAFP,WAGAT,YAAY,CAACU,KAAb,IAAsB;AAAEA,UAAAA,KAAK,EAAEV,YAAY,CAACU;AAAtB,SAHtB;AAHP,SASE;AAAK,QAAA,SAAS,EAAEC;AAAhB,SACGL,QADH,CATF,CADF;AAeD;;;;EApE4BM,KAAK,CAACC,a;;eAsGtBvB,gB","sourcesContent":["import * as React from 'react';\nimport { default as Chart, HTML_ROOT } from 'dechart';\n\nclass DechartComponent extends React.PureComponent<DechartComponentProps> {\n  dechartInstance = undefined;\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { data } = this.props;\n    if (data && data['values']) {\n      this.drawNewChart();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n    if (prevProps.data !== data && data) {\n      this.drawNewChart();\n    }\n  }\n\n  drawNewChart() {\n    const {\n      chartType,\n      componentId,\n      data,\n      handleMouseMove,\n      handleMouseOut,\n      chartOptions,\n    } = this.props;\n\n    this.dechartInstance = new Chart({\n      chartType: chartType,\n      componentId: componentId,\n      data: data['cloneData'] ? data['cloneData']() : { ...data },\n      options: chartOptions,\n    })\n      .on('mousemove', (syntheticData) => {\n        handleMouseMove && handleMouseMove(syntheticData);\n      })\n      .on('mouseout', () => {\n        handleMouseOut && handleMouseOut();\n      });\n  }\n\n  render() {\n    const {\n      chartOptions,\n      children,\n      className,\n      componentId,\n    } = this.props;\n\n    return (\n      <div\n        id={componentId}\n        className={className}\n        style={{\n          borderRadius: '2px',\n          position: 'relative',\n          ...chartOptions.width && { width: chartOptions.width },\n        }}\n      >\n        <div className={HTML_ROOT}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport interface DechartOptions {\n  backgroundColor?: string;\n  height?: number;\n  marginBottom?: number;\n  marginLeft?: number;\n  marginRight?: number;\n  marginTop?: number;\n  minYScale?: boolean;\n  selectedSeries?: string;\n  showBulb?: boolean;\n  showGrid?: boolean;\n  showLegend?: boolean;\n  showXAxis?: boolean;\n  showYAxis?: boolean;\n  width?: number;\n  xAxisFontSize?: number | string;\n  xAxisTicks?: number;\n  yAxisFontSize?: number | string;\n  yAxisTicks?: number;\n}\n\ninterface DechartComponentProps {\n  chartOptions?: DechartOptions;\n  chartType: string;\n  className?: string;\n  componentId: string;\n  data: object;\n  handleMouseMove?: (e: any) => void;\n  handleMouseOut?: () => void;\n}\n\nexport default DechartComponent;\n"],"file":"DechartComponent.js"}