{"version":3,"sources":["DechartComponent.jsx"],"names":["DechartComponent","props","dechartInstance","undefined","data","values","drawNewChart","prevProps","chartType","componentId","handleMouseMove","handleMouseOut","chartOptions","Chart","cloneData","options","on","syntheticData","children","className","borderRadius","position","width","HTML_ROOT","React","PureComponent","defaultProps","propTypes","PropTypes","shape","backgroundColor","string","height","number","marginBottom","marginLeft","marginRight","marginTop","minYScale","bool","selectedSeries","showBulb","showGrid","showLegend","showXAxis","showYAxis","xAxisFontSize","oneOfType","xAxisTicks","yAxisFontSize","yAxisTicks","isRequired","node","object","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { default as Chart, HTML_ROOT } from 'dechart';\n\nclass DechartComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.dechartInstance = undefined;\n  }\n\n  componentDidMount() {\n    const { data } = this.props;\n    if (data && data.values) {\n      this.drawNewChart();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n    if (prevProps.data !== data && data) {\n      this.drawNewChart();\n    }\n  }\n\n  drawNewChart() {\n    const {\n      chartType,\n      componentId,\n      data,\n      handleMouseMove,\n      handleMouseOut,\n      chartOptions,\n    } = this.props;\n\n    this.dechartInstance = new Chart({\n      chartType: chartType,\n      componentId: componentId,\n      data: data.cloneData ? data.cloneData() : { ...data },\n      options: chartOptions,\n    })\n      .on('mousemove', (syntheticData) => {\n        handleMouseMove && handleMouseMove(syntheticData);\n      })\n      .on('mouseout', () => {\n        handleMouseOut && handleMouseOut();\n      });\n  }\n\n  render() {\n    const {\n      chartOptions,\n      children,\n      className,\n      componentId,\n    } = this.props;\n\n    return (\n      <div\n        id={componentId}\n        className={className}\n        style={{\n          borderRadius: '2px',\n          position: 'relative',\n          ...chartOptions.width && { width: chartOptions.width },\n        }}\n      >\n        <div className={HTML_ROOT}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nDechartComponent.defaultProps = {\n  chartOptions: {},\n  children: undefined,\n  handleMouseMove: () => {},\n  handleMouseOut: () => {},\n};\n\nDechartComponent.propTypes = {\n  chartOptions: PropTypes.shape({\n    backgroundColor: PropTypes.string,\n    height: PropTypes.number,\n    marginBottom: PropTypes.number,\n    marginLeft: PropTypes.number,\n    marginRight: PropTypes.number,\n    marginTop: PropTypes.number,\n    minYScale: PropTypes.bool,\n    selectedSeries: PropTypes.string,\n    showBulb: PropTypes.bool,\n    showGrid: PropTypes.bool,\n    showLegend: PropTypes.bool,\n    showXAxis: PropTypes.bool,\n    showYAxis: PropTypes.bool,\n    width: PropTypes.number,\n    xAxisFontSize: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    xAxisTicks: PropTypes.number,\n    yAxisFontSize: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    yAxisTicks: PropTypes.number,\n  }),\n  chartType: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  componentId: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n  handleMouseMove: PropTypes.func,\n  handleMouseOut: PropTypes.func,\n};\n\nexport default DechartComponent;\n"],"file":"DechartComponent.js"}